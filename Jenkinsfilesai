node{

try{

def mavenHome= tool name: 'maven3.8.5'

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * * ')])])

echo "the job name is: ${env.JOB_NAME}"
echo "the build number is: ${env.BUILD_NUMBER}"
echo "the node name is : ${env.NODE_NAME}"

//checkout code state
stage('checkout code'){
sendslackNotifications("STARTED")
git branch: 'development', credentialsId: 'b6da0283-cdaa-4cf5-9337-17ec6e15e2eb', url: 'https://github.com/saibank-apps/maven-web-application.git'
}

//build
stage('build'){
sh "${mavenHome}/bin/mvn clean package"
}

  /*
//ExecutesonarQube report
stage('ExecutesonarQubereport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//uplodeArtifacts into Nexus
stage('uplodeArtifactsintoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

//Deploy App into Tomcat
stage('deploytotomcat'){
sshagent(['a7b0b7c3-40ba-4c10-8e36-7408d428ad44']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.38.144:/opt/apache-tomcat-9.0.68/webapps/"
}
}
 
 */
}//try closing
catch(e){
currentBuild.result = "FAILURE"
}
finally{
sendslackNotifications(currentBuild.result)
}

}//node closing

//functions for slack notications 

def sendslackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

